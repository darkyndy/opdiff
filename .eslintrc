{
  "env": {
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/errors",
    "plugin:eslint-comments/recommended"
  ],
  "parserOptions": {
    "ecmaVersion": 9,
    "sourceType": "module"
  },
  "plugins": [
    "import"
  ],
  "rules": {
    "array-callback-return": 2,
    "array-bracket-spacing": [2, "never"],
    "arrow-body-style": [2, "as-needed"],
    "arrow-spacing": [2, {"before": true, "after": true}],
    "block-scoped-var": 2,
    "brace-style": [2, "1tbs", {"allowSingleLine": true}],
    "camelcase": [2, {"properties": "never"}],
    "class-methods-use-this": 2,
    "comma-dangle": [2, "only-multiline"],
    "comma-spacing": [2, {"before": false, "after": true}],
    "comma-style": [2, "last"],
    "complexity": [2, {
      "max": 20
    }],
    "consistent-return": [2, {
      "treatUndefinedAsUnspecified": false
    }],
    "curly": [2, "all"],
    "default-case": 2,
    "dot-location": [2, "property"],
    "dot-notation": [2, {
      "allowKeywords": false
    }],
    "eol-last": 2,
    "eqeqeq": [2, "always"],
    "func-call-spacing": [2, "never"],
    "guard-for-in": 2,
    "import/no-absolute-path": 2,
    "import/no-cycle": 2,
    "import/no-unresolved": 2,
    "import/no-useless-path-segments": 2,
    "import/order": [2, {
      "groups": [
        "builtin",
        "external",
        "internal",
        ["parent", "sibling"],
        "index"
      ],
      "newlines-between": "ignore"
    }],
    "indent": [2, 2, {
      "ArrayExpression": 1,
      "MemberExpression": 1,
      "ObjectExpression": 1,
      "SwitchCase": 1
    }],
    "key-spacing": [2, {"beforeColon": false, "afterColon": true}],
    "keyword-spacing": [2, {"before": true, "after": true}],
    "lines-around-comment": [2, {
      "beforeBlockComment": true
    }],
    "max-classes-per-file": [2, 1],
    "max-len": [2, {
      "code": 120,
      "ignoreComments": true,
      "ignorePattern": "^(\\s*(import\\W.*|(it|describe)\\())",
      "ignoreUrls": true,
      "tabWidth": 2
    }],
    "newline-per-chained-call": [2, {"ignoreChainWithDepth": 2}],
    "no-alert": 2,
    "no-array-constructor": 2,
    "no-await-in-loop": 2,
    "no-class-assign": 2,
    "no-caller": 2,
    "no-cond-assign": [2, "always"],
    "no-confusing-arrow": [2, {"allowParens": true}],
    "no-console": 2,
    "no-const-assign": 2,
    "no-debugger": 2,
    "no-duplicate-imports": 2,
    "no-eq-null": 2,
    "no-eval": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-extra-label": 2,
    "no-floating-decimal": 2,
    "no-implicit-coercion": 2,
    "no-implicit-globals": 2,
    "no-else-return": [2, {
      "allowElseIf": false
    }],
    "no-empty": [2, {
      "allowEmptyCatch": true
    }],
    "no-empty-function": [2, {
      "allow": [
        "generatorMethods"
      ]
    }],
    "no-extra-semi": 2,
    "no-implied-eval": 2,
    "no-irregular-whitespace": 2,
    "no-lonely-if": 2,
    "no-lone-blocks": 0,
    "no-mixed-spaces-and-tabs": 2,
    "no-multi-spaces": 2,
    "no-multiple-empty-lines": [2, {
      "max": 2,
      "maxBOF": 1,
      "maxEOF": 1
    }],
    "no-nested-ternary": 2,
    "no-new-object": 2,
    "no-plusplus": 2,
    "no-restricted-syntax": [2,
      {
        // test for export class (only at the bottom of the file)
        "selector": "ExportNamedDeclaration > ClassDeclaration",
        "message": "Export should be done at the bottom of the file (found: `export class`)"
      },
      {
        // test for const/let that are in sub-describe (available only under main describe)
        "selector": "CallExpression[callee.type='Identifier'][callee.name='describe'] BlockStatement BlockStatement VariableDeclaration",
        "message": "const or let should be used only at suite top-level (main describe)"
      },
      {
        // test for it.only
        "selector": "CallExpression[callee.type='MemberExpression'][callee.object.type='Identifier'][callee.object.name='it'][callee.property.name='only']",
        "message": "We should not have it.only in tests"
      },
      {
        // test for describe.only
        "selector": "CallExpression[callee.type='MemberExpression'][callee.object.type='Identifier'][callee.object.name='describe'][callee.property.name='only']",
        "message": "We should not have describe.only in tests"
      }
    ],
    "no-self-assign": 2,
    "no-shadow": 2,
    "no-sparse-arrays": 2,
    "no-template-curly-in-string": 2,
    "no-trailing-spaces": [2, {
      "skipBlankLines": true
    }],
    "no-var": 2,
    "no-underscore-dangle": 0,
    "no-unused-vars": [2, {
      "args": "after-used",
      "caughtErrors": "none",
      "ignoreRestSiblings": true
    }],
    "no-useless-catch": 0, // I want empty catch
    "no-useless-computed-key": 2,
    "no-useless-constructor": 2,
    "no-useless-rename": 2,
    "no-whitespace-before-property": 2,
    "object-curly-spacing": [2, "never"],
    "object-property-newline": [2, {
      "allowMultiplePropertiesPerLine": true
    }],
    "operator-linebreak": [2, "after"],
    "padded-blocks": [0, "never"],
    "prefer-arrow-callback": 2,
    "prefer-const": 2,
    "prefer-template": 2,
    "quotes": [2, "single"],
    "semi": [2, "always"],
    "semi-spacing": ["error", {"before": false, "after": true}],
    "sort-keys": [2, "asc",
      {
        "caseSensitive": false,
        "natural": true
      }
    ],
    "space-before-blocks": [2],
    "space-before-function-paren": [2, {"anonymous": "always", "named": "never"}],
    "space-infix-ops": 2,
    "space-in-parens": [2, "never"],
    "spaced-comment": [2, "always"],
    "strict": 2,
    "template-curly-spacing": [2, "never"],
    "valid-jsdoc": [2, {
      "matchDescription": "[A-Z]+.{5}.*",
      "prefer": {
        "arg": "param",
        "argument": "param",
        "class": "constructor",
        "constant": "const",
        "return": "return",
        "returns": "return",
        "virtual": "abstract"
      },
      "preferType": {
        "boolean": "Boolean",
        "function": "Function",
        "number": "Number",
        "object": "Object",
        "string": "String"
      },
      "requireParamDescription": true,
      "requireParamType": true,
      "requireReturn": true,
      "requireReturnDescription": true,
      "requireReturnType": true
    }]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js"
        ]
      }
    }
  }
}
